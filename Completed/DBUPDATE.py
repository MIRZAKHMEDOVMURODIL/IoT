{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import ibm_db\n",
    "import sys\n",
    "import logging\n",
    "from logging.handlers import RotatingFileHandler\n",
    "from os.path import join\n",
    "import datetime\n",
    "\n",
    "database = \"AYB_APPL\"\n",
    "host = \"10.143.16.244\"\n",
    "port =\"50000\"\n",
    "protocol=\"TCPIP\"\n",
    "user=\"IOT_DATA\"\n",
    "password=\"asd23fgh\"\n",
    "log = \"logs\"\n",
    "\n",
    "os.makedirs(log, exist_ok=True)\n",
    "\n",
    "log_path = join(log,\"debug.log\")\n",
    "log_formatter = logging.Formatter('%(asctime)s [%(levelname)s]: %(message)s')\n",
    "log_handler = RotatingFileHandler(filename=log_path, maxBytes=1048576, backupCount=10, delay=True)\n",
    "log_handler.setFormatter(log_formatter)\n",
    "logger = logging.getLogger()\n",
    "logger.setLevel(logging.DEBUG)  \n",
    "logger.addHandler(log_handler)\n",
    "\n",
    "# 1.Take Variable from MotionBoard\n",
    "try:\n",
    "    # CATEGORY = sys.argv[1]\n",
    "    # EQP = sys.argv[2]\n",
    "    # TS_DT = sys.argv[3]\n",
    "    # DATA_COLUMN = sys.argv[4]\n",
    "    # INPUT_DT = sys.argv[5]\n",
    "    # INPUT_PERSON = sys.argv[6]\n",
    "    # INPUT_COMMENT = sys.argv[7]\n",
    "\n",
    "    CATEGORY = \"Particles\"\n",
    "    EQP = \"MM_01\"\n",
    "    TS_DT =\"2024/04/09 11:07:52\"\n",
    "    DATA_COLUMN = \"0.5, 1.0, 5.0, 10.0\"\n",
    "    INPUT_DT = \"2024/04/09 11:10:52\"\n",
    "    INPUT_PERSON = \"Murodil\"\n",
    "    INPUT_COMMENT = \"Test\"\n",
    "\n",
    "except Exception as e:\n",
    "    logging.error(f\"An error occurred while taking variable from Motionboard to Python: {str(e)}\")\n",
    "\n",
    "\n",
    "# 2.Connect to Database\n",
    "try:\n",
    "    dsn = f\"DATABASE={database};HOSTNAME={host};PORT={port};PROTOCOL={protocol};UID={user};PWD={password}\"\n",
    "    conn = ibm_db.connect(dsn, \"\", \"\")\n",
    "except Exception as e:\n",
    "    logging.info(\"Failed to Connect to Database: %s\", e)\n",
    "\n",
    "\n",
    "# 3.Update Database\n",
    "try:\n",
    "    ts_dt = datetime.datetime.strptime(TS_DT, '%Y/%m/%d %H:%M:%S').strftime('%Y-%m-%d %H:%M:%S')\n",
    "    input_dt = datetime.datetime.strptime(INPUT_DT, '%Y/%m/%d %H:%M:%S').strftime('%Y-%m-%d %H:%M:%S')\n",
    "    sql = f\"UPDATE IOT_DATA.THRESHOLD_ALERT SET INPUT_DT='{input_dt}', INPUT_PERSON='{INPUT_PERSON}', INPUT_COMMENT='{INPUT_COMMENT}' WHERE CATEGORY='{CATEGORY}' AND EQP='{EQP}' AND TS_DT='{ts_dt}' AND DATA_COLUMN='{DATA_COLUMN}'\"\n",
    "    stmt = ibm_db.prepare(conn, sql)\n",
    "    ibm_db.execute(stmt)\n",
    "except Exception as e:\n",
    "    logging.exception(\"An error occurred while updating: %s\", e)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
